name: Build Avalonia App

on:
  push:
    branches:
      - master  # или другая ветка, с которой вы хотите собирать
  pull_request:
    branches:
      - master  # или другая ветка для PR

jobs:
  build:
    runs-on: ubuntu-latest  # или windows-latest или macos-latest, в зависимости от цели

    strategy:
      matrix:
        os: [linux, win, osx]  # Указание всех платформ для CI

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '9.0'  # Убедитесь, что указываете версию SDK, например, 9.0

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release

    - name: Publish for ${{ matrix.os }}-x64
      run: dotnet publish --configuration Release --runtime ${{ matrix.os }}-x64 --self-contained --output ./publish/${{ matrix.os }}

    # Обновленный шаг для загрузки артефактов с использованием v3
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: publish-${{ matrix.os }}  # Название артефакта
        path: ./publish/${{ matrix.os }}  # Путь к файлам
        
    - name: Create macOS .app bundle
      if: ${{ matrix.os == 'osx' }}
      run: |
          mkdir -p MyApp.app/Contents/MacOS
          cp -R ./publish/osx-x64/* MyApp.app/Contents/MacOS/
          cat > MyApp.app/Contents/Info.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>
            <string>MyApp</string>
            <key>CFBundleExecutable</key>
            <string>MyApp</string>
            <key>CFBundleIdentifier</key>
            <string>com.yourcompany.myapp</string>
            <key>CFBundleVersion</key>
            <string>1.0</string>
          </dict>
          </plist>
          EOF

    - name: Upload non-macOS artifact
      if: ${{ matrix.os != 'osx' }}
      uses: actions/upload-artifact@v3
      with:
        name: publish-${{ matrix.os }}
        path: ./publish/

    - name: Upload macOS .app bundle artifact
      if: ${{ matrix.os == 'osx' }}
      uses: actions/upload-artifact@v3
      with:
        name: MyApp-macOS
        path: MyApp.app
